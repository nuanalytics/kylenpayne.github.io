Lab 1 Notes 
========================================================
author: Kyle N. Payne 
date: 1/19/2016

Getting Started
========================================================
- Welcome!

- Lab Time : Wed 12-1:50pm
- Course Website : compass2g.illinois.edu
- TA Website : kylenpayne.github.io
- TA Name : Kyle N. Payne, (Kyle, K-Pax, “Hey…man”)
- TA Office Hours : Wed 10-11:00pm
- TA Email : knpayne2@illinois.edu

Book
========================================================

- Title : An Introduction to Statistical Methods and Data Analysis
- Author(s) : R Lyman Ott, Michael Longnecker
- Edition : 6th
- Can be found on most retailers like Amazon.com, abebooks.com, etc…
- Also can be found by google-ing Title + 'pdf'


Software
========================================================

- Software is a huge component of statistical analysis
- We will support SAS and R usage for this course
- SAS is a suite of tools for statistical analysis
- R is a programming language primarily for statistical analysis

SAS
========================================================


- SAS inc. is the worlds largest privately held software company.
- Used by most fortune 500 companies http://archive.fortune.com/2010/01/21/technology/sas_best_companies.fortune/index.htm
- SAS Software has over 200 components
- Can perform many statistical analyses with limited effort
- Presents a robust suite of industry standard tools.   https://en.wikipedia.org/wiki/SAS_(software)#cite_note-encycl-2

R
========================================================
- “Much closer to the metal” than SAS
- Can be used to create your own functions, libraries, etc…
- Requires more effort
- But this results in arguably better skill development

Accessing SAS
========================================================
- N120
- Many campus computer labs
- Remotely through ACES
- SAS OnDemand


Accessing R
========================================================
- Rstudio : https://www.rstudio.com/
- On many workstation on campus
- Can be downloaded on most computers
- Very lightweight software

Pragmatics
========================================================
- When you turn in homework, please show all work. This amounts to:
+ All the steps in a math problem
+ All of the code you used to solve a problem
+ All graphs, figures, tables, etc.

Without these, you are banking on your result being 100% correct.

Some Theory
========================================================
- Random Variable : A variable whose value is subject to variations due to chance 
- Population : A population is a complete set of items that share at least one property in common.
- Parameter : A characteristic of the population.
- Statistic : A quantity calculated from a sample.
- Estimator : A statistic that estimates a parameter.
e.g. $\bar{X} = \sum_{i=1}^{n}X_{i} \Rightarrow \mu$

Some Theory
========================================================

- In inferential statistics, we typically attempt to do two things.
1. Estimate the value of a population parameter using sample statistics.
2. Establish if the population value is greater than/less than/equal to 
a value given our estimate. (That is the statistical test alex mentioned briefly).

Some Theory
========================================================

- In class, Dr. Lipka mentioned cumulative frequency and class intervals.
- Let's go ahead and define these:
- Class interval. Take X to be some random variable (let's say height of US men). Let's assume we take a random sample of men from the US, and measure their heights. We are taking $n$ measurements. (e.g. $n=1,2,3, ...$ ).
Then let $X_{i}$ denote the ith sample measurement of height. Let's then sort these values from smallest to largest. Let's denote these data $X_{(i)}$, where
$$ X_{(1)} < X_{(2)} < ... < X_{(n)} $$.

Some Theory
========================================================

- Then $X_{(1)}$ is the minimum value of the sample
- And $X_{(n)}$ is the maximum value of the sample.

We call the $X_{(i)}$'s order statistics (because we ordered them, get it?).

Assume we are going to break these order statistics into $k$ intervals, and count the number of observations in them, then we can define $I_{1}, I_{2}, ..., I_{k}$, to be these intervals, where typically the first intervals starts at $X_{(1)}$, and the last interval ends at $X_{(n)}$.


Some Theory
========================================================

- The cumulative frequency is the sum of these bins up to some amount.
- Let's denote the count of samples in the $i^{th}$ interval as $C(I_{i})$
- Let's denote the frequency of the $k^{th}$ interval as 
$$
  f_{k} = \frac{C(I_{k})}{n}
$$
- Then the cumulative frequency is up to some number $y$ is the sum of these 
frequencies up to the bin that contains $y$. 

Example
========================================================
Let's try an example, but first we need to know some CS concepts.

About all of the CS you need to know in one slide
========================================================

 - Objects are models of information
 - In R we use objects to store and manipulate information
 - This information can be data, models, statistics, numbers, names, ...
 - We manipulate these objects with functions.
 - We assign information to objects with the '<-' symbol

Example
========================================================


```{r}
data <- read.csv("~/Desktop/CSPC 440 TA/darwin.dat", sep="")
colnames(data)

```

Example
========================================================


```{r}
data
```



Example
========================================================

```{r}
yield <- data$yield
breaks <- seq(min(yield), max(yield), length.out=5)
yield_cut <- cut(yield, breaks, right=F)
yield_freq <- table(yield_cut)
cum_freq <- cumsum(yield_freq)
yield_freq
cum_freq
```

Objects
========================================================

These are both objects
```{r}
typeof(data$yield)
yield <- data$yield
typeof(yield)
```

Functions
========================================================

Functions hold the same interpretation as they do in mathematics

 - $x \rightarrow f(x)$
 
```{r}
mean
hist
```

Functions
========================================================
Functions act on objects, and return other objects.
These can be numbers, data, or even plots.
```{r}
mean(yield)
hist(yield)
```

SAS
========================================================

Much of this is not applicable to SAS.

In SAS you type some commands and it essentially flings tons of information at you.

